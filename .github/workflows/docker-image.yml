name: Build and Deploy

on:
   push:
       branches:
           - main
#  workflow_dispatch:

jobs:
  buildEndDeploy:
    runs-on: ubuntu-latest
    env:
      #from env vars
#      BACKEND_PORT: ${{ vars.BACKEND_PORT }}
#      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#      DATABASE_URL: ${{ vars.DATABASE_URL }}
#      URL_APP: ${{ vars.URL_APP }}
#      JWT_TOKEN: ${{ vars.JWT_TOKEN }}
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      GIN_MODE: ${{ vars.GIN_MODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker compose build
      - name: copy docker-compose.yml to /home/runner/
        run: cp docker-compose.yml /home/runner/
#      - name: copy mongod.conf to /home/runner/
#        run: cp mongod.conf /home/runner/

      # - name: save docker-compose.yml to artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #       name: docker-compose.yml
      #       path: docker-compose.yml
      # - name: save mongod.conf to artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #       name: mongod.conf
      #       path: mongod.conf
      - name: Save Docker image to tar
        run: docker save -o /home/runner/image.tar bot-app-1
      - name: list files
        run: ls -sh /home/runner/
      # - name: upload artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #       name: image.tar
      #       path: /home/runner/image.tar
      - name: run deploy
        run: echo "deploying"
      - name: list files
        run: ls -sh /home/runner/
      - name: create dirs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p /home/gitdeployer/tg

      - name: add known hosts
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-port: ${{ secrets.SSH_PORT }}
      - name: transfer image
        run: |
          scp -P ${{ secrets.SSH_PORT }} /home/runner/image.tar ${{ secrets.USERNAME }}@${{ secrets.SSH_HOST }}:/home/gitdeployer/tg
          scp -P ${{ secrets.SSH_PORT }} /home/runner/docker-compose.yml ${{ secrets.USERNAME }}@${{ secrets.SSH_HOST }}:/home/gitdeployer/tg
          scp -P ${{ secrets.SSH_PORT }} /home/runner/mongod.conf ${{ secrets.USERNAME }}@${{ secrets.SSH_HOST }}:/home/gitdeployer/tg

      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }}
            export GIN_MODE=${{ vars.GIN_MODE }}
            cd /home/gitdeployer/tg
            docker load -i image.tar
            docker compose up -d
            rm image.tar


#name: CI/CD Pipeline
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Set up Go
#      uses: actions/setup-go@v4
#      with:
#        go-version: 1.22.6
#
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2
#
#    - name: Log in to GitHub Container Registry
#      uses: docker/login-action@v3
#      with:
#        registry: ghcr.io
#        username: ${{ github.repository_owner }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#
#    - name: Build and push Docker image
#      env:
#        TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
#      run: |
#        docker compose up -d --build
#
##    - name: Run tests
##      run: docker-compose exec app go test ./...
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Deploy to Production
#      env:
#        TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
#        GIN_MODE: ${{ vars.GIN_MODE }}
#      run: |
#        docker-compose up -d --build
